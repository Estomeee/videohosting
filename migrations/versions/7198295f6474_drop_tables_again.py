"""Drop tables again(

Revision ID: 7198295f6474
Revises: 8b96feb02903
Create Date: 2023-06-08 00:27:51.976705

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7198295f6474'
down_revision = '8b96feb02903'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_table('sub')
    op.drop_table('like')
    op.drop_table('comment')
    op.drop_table('view')
    op.drop_table('video')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('video',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('title', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
                    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('count_likes', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('id_auther', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('video_link', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('poster_link', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('published_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              autoincrement=False, nullable=False),
                    sa.Column('count_comments', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['id_auther'], ['user.id'], name='video_id_auther_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name='video_pkey')
                    )
    op.create_table('view',
    sa.Column('id_video', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('id_user', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('published_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], name='view_id_user_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_video'], ['video.id'], name='view_id_video_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_video', 'id_user', name='view_pkey')
    )
    op.create_table('comment',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id_video', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('id_auther', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('published_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_auther'], ['user.id'], name='comment_id_auther_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_video'], ['video.id'], name='comment_id_video_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='comment_pkey')
    )
    op.create_table('like',
    sa.Column('id_video', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('id_auther', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('published_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_auther'], ['user.id'], name='like_id_auther_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_video'], ['video.id'], name='like_id_video_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_video', 'id_auther', name='like_pkey')
    )
    op.create_table('sub',
    sa.Column('id_maker', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id_subscriber', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('datatime', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_maker'], ['user.id'], name='sub_id_maker_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_subscriber'], ['user.id'], name='sub_id_subscriber_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_maker', 'id_subscriber', name='sub_pkey')
    )

    # ### end Alembic commands ###
